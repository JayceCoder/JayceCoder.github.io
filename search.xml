<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用hexo搭建个人博客</title>
      <link href="/2019/05/06/CreateBlogByHexo/"/>
      <url>/2019/05/06/CreateBlogByHexo/</url>
      
        <content type="html"><![CDATA[<h4 id="使用hexo搭建个人博客"><a href="#使用hexo搭建个人博客" class="headerlink" title="使用hexo搭建个人博客"></a>使用hexo搭建个人博客</h4><ol><li>安装 <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">git</a>安装完之后使用cmd命令查看是否安装成功<br> <code>git --version</code></li><li>安装 <a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a>安装完之后使用cmd命令查看是否安装成功<br> <code>node --version</code></li><li>安装hexo<br> 在桌面任意位置单击右键，选择Git Base<br>输入命令<br><code>npm install -g hexo</code> <br>注:-g表示全局安装</li><li>在任意位置(你需要存放博客的本地地址)先创建一个hexo文件夹<br>空白位置鼠标右键选择Git Base<br>输入以下命令初始化hexo模板<br><code>hexo init</code><br>刷新下可以看到如图所示结构<br><img src="/img/hexoinit.jpg" alt="hexo init文件目录"><br><img src="/img/hexolist.jpg" alt="hexo init文件目录"><br>输入以下命令安装nodejs依赖包<br><code>npm install</code><br>输入以下命令构建静态页面<br><code>hexo generate</code><br>输入以下命令启动本地服务<br><code>hexo server</code><br>启动后   输入路径localhost:4000到游览器即可看到效果了</li><li>常用hexo命令<br>创建新页面<code>hexo new page ***</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> it </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用dos命令</title>
      <link href="/2019/05/06/s1/"/>
      <url>/2019/05/06/s1/</url>
      
        <content type="html"><![CDATA[<h5 id="常用dos命令"><a href="#常用dos命令" class="headerlink" title="常用dos命令"></a>常用dos命令</h5><figure class="hljs highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><code class="hljs undefined">D: 去往D盘<br><br>cd.. 返回上一级目录<br><br>cd 文件名 目录切换到该文件名（子目录）下<br><br>cd \ 直接回根目录<br><br>dir 当前根目录下的文件目录<br><br>dir /s 所有目录<br><br>dir/p 目录多的时候，p用来分屏，显示完一屏后停下来<br><br>dir/w 所有文件一屏内显示，只显示文件和子目录<br><br>dir *.bat 显示所有扩展名是bat的文件,*代表任意字符。*为通配符，可代表多个字符，在分隔符前起作用<br><br>dir a* 显示所有文件名是a的文件，*代表任意字符<br><br>dir a? 显示所有文件名是以a开头，并只有2个字母，？代表任意字符。?为通配符，只能代表1个字符，在分隔符前起作用<br><br>dir /ta 显示目录的文件上次访问时间 access<br><br>dir /tc 显示目录的文件创建时间 creat<br><br>md 文件名 创建目录-make directory<br><br>rd 文件名 移除目录-remove directory 移除的目录中不能有子目录和文件，不能删除当前目录<br><br>copy con 1.txt 建立文件名为1的txt文档 建立后直接跳到文档内容，ctrl+z完成内容编辑<br><br>del 1.txt 删除文件名为1的txt文档 del仅用于文档，rd用于文件<br><br>ren 文件名 新文件名 重命名<br><br>type 1.txt 显示文件1.txt的内容 一般只适用于txt<br><br>tree 显示文件目录树，含最底层目录<br><br>echo 显示此命令后的字符<br><br>echo off 在此语句后所有运行的命令都不显示命令行本身<br><br>pause 暂停<br><br>Ctrl+C 中断操作 比如运行tree很长的时候<br><br>鼠标右键-标注 可选中文本<br><br>鼠标操作-粘贴 可粘贴文本<br><br>F7 查看之前执行的命令 MAC下的win系统，需要加Fn<br><br>help 指令帮助<br><br>cls 清除屏幕<br><br>ver 查看系统版本<br><br>date 查看日期<br><br>time 查看时间<br><br>ipconfig 查看电脑和网络地址<br><br>ipconfig /all 显示所有网络适配器的完整TCP/IP配置信息<br><br>winver 查看windows系统版本<br><br>notepad 打开记事本程序<br><br>mspaint 打开画图程序<br><br>calc 打开计算机程序<br><br>mstsc 远程桌面连接-Microsoft Terminal Server Connection<br><br>regedit 注册表编辑器<br><br>devmgmt 设备管理器程序-device management<br><br>taskmgr 任务管理器-task manager<br><br>tasklist 显示计算机进程<br><br>appwiz.cpl 添加/删除程序-application wizard<br><br>ncpa.cpl 网络连接属性-network control panel applet<br><br>firewall.cpl 防火墙<br><br>control 打开控制面板<br><br>Tab键 补全文件名<br></code></pre></td></tr></table></figure><p>​            </p><p>　　    </p>]]></content>
      
      
      <categories>
          
          <category> dos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java知识回顾</title>
      <link href="/2019/05/06/java01/"/>
      <url>/2019/05/06/java01/</url>
      
        <content type="html"><![CDATA[<h5 id="Java是什么？"><a href="#Java是什么？" class="headerlink" title="Java是什么？"></a>Java是什么？</h5><p><a href="https://baike.baidu.com/item/Java/85979" target="_blank" rel="noopener">Java</a>是一门<a href="https://baike.baidu.com/item/面向对象" target="_blank" rel="noopener">面向对象</a>编程语言，不仅吸收了<a href="https://baike.baidu.com/item/C%2B%2B" target="_blank" rel="noopener">C++</a>语言的各种优点，还摒弃了C++里难以理解的<a href="https://baike.baidu.com/item/多继承" target="_blank" rel="noopener">多继承</a>、<a href="https://baike.baidu.com/item/指针/2878304" target="_blank" rel="noopener">指针</a>等概念，因此Java语言具有功能强大和简单易用两个特征。Java语言作为静态面向对象编程语言的代表，极好地实现了面向对象理论，允许程序员以优雅的思维方式进行复杂的编程  。<br><br><br><br>Java具有简单性、面向对象、<a href="https://baike.baidu.com/item/分布式/19276232" target="_blank" rel="noopener">分布式</a>、<a href="https://baike.baidu.com/item/健壮性/4430133" target="_blank" rel="noopener">健壮性</a>、<a href="https://baike.baidu.com/item/安全性/7664678" target="_blank" rel="noopener">安全性</a>、平台独立与可移植性、<a href="https://baike.baidu.com/item/多线程/1190404" target="_blank" rel="noopener">多线程</a>、动态性等特点  。Java可以编写<a href="https://baike.baidu.com/item/桌面应用程序/2331979" target="_blank" rel="noopener">桌面应用程序</a>、<a href="https://baike.baidu.com/item/Web应用程序" target="_blank" rel="noopener">Web应用程序</a>、<a href="https://baike.baidu.com/item/分布式系统/4905336" target="_blank" rel="noopener">分布式系统</a>和<a href="https://baike.baidu.com/item/嵌入式系统/186978" target="_blank" rel="noopener">嵌入式系统</a>应用程序等</p><h5 id="JDK与JRE"><a href="#JDK与JRE" class="headerlink" title="JDK与JRE"></a>JDK与JRE</h5><ul><li><p>JRE(Java Runtime Environment)：Java运行环境，为Java的运行提供了环境.</p></li><li><p>JDK(Java Devolopment Kit)：Java开发工具包，提供了Java的开发环境与运行环境。</p><p>注:JDK包含了JRE也包含编译Java源码的Javac以及很多Java程序调试和分析的工具。如果只运行Java程序的话，只需要安装JRE就行了，要编写Java程序就需要安装JDK。</p></li></ul><h4 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><ol><li>整数类型<br><code>byte;short;int;long</code></li><li>浮点类型<br><code>float;double</code></li><li>字符类型<br><code>char</code></li><li>布尔类型<br><code>boolean</code></li></ol><h5 id="和equals"><a href="#和equals" class="headerlink" title="==和equals"></a>==和equals</h5><p>对于基本类型和引用类型==的作用效果是不一样的</p><ul><li>基本类型：比较的是值是否相同。</li><li>引用类型：比较的是引用是否相同。</li></ul><p>equals本质上就是==，只不过String和Integer等重写了equals方法，把它变成了值比较。</p><ul><li>String a = “string”;</li><li>String b = “string”;</li><li>String c = new String(“string”);</li><li>Sytem.out.println(a==b);//true</li><li>Sytem.out.println(a==c);//false</li><li>Sytem.out.println(a.equals(b));//true</li><li>Sytem.out.println(a.equals(c));//true</li></ul><h4 id="final在Java中的作用"><a href="#final在Java中的作用" class="headerlink" title="final在Java中的作用"></a>final在Java中的作用</h4><ul><li>final修饰的类叫最终类，该类不能被继承。</li><li>final修饰的方法不能被重写。</li><li>final修饰的变量叫做常量，常量必须初始化，初始化之后不能被修改。</li></ul><h4 id="操作字符串的类"><a href="#操作字符串的类" class="headerlink" title="操作字符串的类"></a>操作字符串的类</h4><ul><li><code>String</code></li><li><code>StringBuffer</code></li><li><p><code>StringBuilder</code></p><p>  区别在于String声明的是不可变的对象，每次操作都会生产新的String对象，然后将指针指向新的String对象，而StringBuffer、StringBuilder可以在原有的基础上进行操作，所以经常改变字符串内容的情况下最好不使用String<br><br>StringBuffer和StringBuilder最大的区别在于，StringBuffer是线程安全的，StringBuilder是非线程安全的，但StringBuilder的性能却高于StringBuffer的，所以单线程下推荐使用StringBuilder，多线程下使用StringBuffer。</p></li></ul><h4 id="String类的常用方法"><a href="#String类的常用方法" class="headerlink" title="String类的常用方法"></a>String类的常用方法</h4><ul><li>indexof();返回指定字符的索引</li><li>charAt();返回指定索引处的字符</li><li>replace();字符串替换</li><li>trim();去除字符串两端的空白</li><li>spilt();分割字符串，返回一个分割后的字符串数组</li><li>getBytes();返回字符串的byte类型数组</li><li>length();返回字符串长度</li><li>toLowerCase();将字符串转成小写字符</li><li>toUpperCase();将字符串转成大写字符</li><li>substring();截取字符串</li><li>equals();字符串比较</li></ul>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<ul><li>一枚java程序员，爱好数码产品</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>favicons</title>
      <link href="/favicons/index.html"/>
      <url>/favicons/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>img</title>
      <link href="/img/index.html"/>
      <url>/img/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
